name: Deploy Amplify with Terraform

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to Deploy"
        default: sandbox
        required: true
        type: choice
        options:
          - sandbox
          - dev
          - qastg
          - prod
  # push:
  #   branches:
  #     - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Read role ARN from JSON
        id: readrole
        working-directory: terraform/config
        run: |
          ROLE_TO_ASSUME=$(jq -r ".${{ github.event.inputs.env }}" roles.json)
          if [ -z "$ROLE_TO_ASSUME" ] || [ "$ROLE_TO_ASSUME" = "null" ]; then
            echo "ERROR: No role ARN found for environment '${{ github.event.inputs.env }}'."
            exit 1
          fi
          echo "ROLE_TO_ASSUME=$ROLE_TO_ASSUME" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.readrole.outputs.ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Sanity Check
        run: aws sts get-caller-identity # or your 'aws amplify' commands

      - name: Terraform Plan
        env:
          TF_VAR_github_owner: ${{ github.repository_owner }}
          TF_VAR_github_repo: ${{ github.event.repository.name }}
        run: |
          cd terraform && \
          terraform init -input=false -backend=true -backend-config="bucket=essaypop-${{ github.event.inputs.env }}-tfstate" -backend-config="key=terraform.tfstate" -backend-config="region=us-west-2" -backend-config="encrypt=true" && \
          terraform workspace select ${{ github.event.inputs.env }} || terraform workspace new ${{ github.event.inputs.env }} && \
          terraform plan -input=false && \
          terraform apply -auto-approve -input=false
